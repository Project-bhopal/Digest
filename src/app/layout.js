"use client";
import { AppRouterCacheProvider } from "@mui/material-nextjs/v14-appRouter";
import Navbar from "@/components/Navbar";
import "./globals.css";
import Footer from "@/components/Footer";
import { ThemeProvider } from "../context/theme.js";
import { useEffect, useState } from "react";
import ScrollToTopButton from "@/components/ScrollToTopButton";
import PostContext from "@/context/postContext";
import axios from "axios";
// export const metadata = {
//   title: 'Next.js',
//   description: 'Generated by Next.js',
// }

export default function RootLayout({ children }) {
  const [themeMode, setThemeMode] = useState("light");
  const [posts, setPosts] = useState([]);
  const [showMore, setShowMore] = useState(8);

  

  const [trendingPost, setTrendingPost] = useState({});
  const [trendingSection, setTrendingSection] = useState([]);
  const [recommendedSection, setRecommendedSection] = useState([]);
  const [spotlightPost, setSpotlightPost] = useState([]);
  const [spotlightSection, setSpotlightSection] = useState([]);
  const [popularSection, setPopularSection] = useState([]);
  const [mustReadSection, setMustReadSection] = useState([]);

  // Advertising page
  const [ advertisingPosts, setAdvertisingPosts] = useState([]);
  // Marketing page
  const [ marketingPosts, setMarketingPosts] = useState([]);
  // MarketTrends
  const [ marketTrendsPosts, setMarketTrendsPosts] = useState([]);
  // Startups
  const [ startupsPosts, setStartupsPosts] = useState([]);
  // TechMoves
  const [ techMovesPosts, setTechMovesPosts] = useState([])
  // Latest post for blogs page
  const [latestSection, setLatestSection] = useState([]);

  const API_URL=process.env.NEXT_PUBLIC_API_URL;

  const handleShowMore = () => {
    setShowMore((prev) => prev + 8); // Increment showMore
  };

  useEffect(() => {
    const fetchData = async () => {
      try {
        const response = await axios.get(
          `${API_URL}/api/posts/allpost/`
        );
        const data = response.data.data;
        setPosts(data);
      } catch (error) {
        console.error(error.message);
      }
    };
    fetchData();
  }, []);




  useEffect(() => {
    if (posts.length > 0) {

       const latestPosts = [...posts]
            .sort((a, b) => new Date(b.date) - new Date(a.date))
            .slice(0, 50);

      setTrendingPost(posts[Math.floor(Math.random() * 5)]);
      setSpotlightPost(latestPosts[Math.floor(Math.random() * 10) ]);
    
    setTrendingSection(posts.slice(0, 5).map((item) => item));
    setRecommendedSection(
      [...latestPosts].sort(() => Math.random() - 0.5).slice(-4)
    );
    setMustReadSection([...posts].sort(() => Math.random() - 0.5).slice(-4));
    setSpotlightSection([...latestPosts].sort(() => Math.random() - 0.5).slice(-4));
    setPopularSection([...posts].sort(() => Math.random() - 0.5).slice(0, 3));

    //Advertising page
    setAdvertisingPosts(posts.filter((item) => item?.category == "advertising").slice(0, showMore));
    // Marketing page
    setMarketingPosts(posts.filter((item) => item?.category == "marketing").slice(0, showMore));
    // MarketTrends
    setMarketTrendsPosts(posts.filter((item) => item?.category == "market trends").slice(0, showMore));
    // Startups
    setStartupsPosts(posts.filter((item) => item?.category == "startups").slice(0, showMore));
    // TechMoves
    setTechMovesPosts(posts.filter((item) => item?.category == "tech moves").slice(0, showMore));
    // Latest posts for blogs page
    setLatestSection([...posts].sort(() => Math.random() - 0.5).slice(0, showMore));
  };
  }, [posts, showMore]);

  const darkTheme = () => {
    setThemeMode("dark");
    localStorage.setItem("themeMode", "dark");
  };

  const lightTheme = () => {
    setThemeMode("light");
    localStorage.setItem("themeMode", "light");
  };

  useEffect(() => {
    const theme = localStorage.getItem("themeMode") || "light";

    setThemeMode(theme);
    document.querySelector("html").classList.remove("light", "dark");
    document.querySelector("html").classList.add(theme);
  }, [themeMode]);

  return (
    <html lang="en">
      <body className="bg-white dark:bg-black ">
        <AppRouterCacheProvider>
          <PostContext.Provider value={{posts, trendingPost, trendingSection, recommendedSection, spotlightPost, spotlightSection, popularSection, mustReadSection, advertisingPosts, marketingPosts, marketTrendsPosts, startupsPosts, techMovesPosts, latestSection, handleShowMore}}>
            <ThemeProvider value={{ themeMode, darkTheme, lightTheme }}>
              <Navbar />
              <div className="xl:px-[7%] lg:px-[3%]">{children}</div>
              <Footer />
              <ScrollToTopButton />
            </ThemeProvider>
          </PostContext.Provider>
        </AppRouterCacheProvider>
      </body>
    </html>
  );
}
